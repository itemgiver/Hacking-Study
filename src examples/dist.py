import math
from decimal import Decimal

n1 = 0xe63ea52d1ce6f58a3cdb3f9634275bc86f2df21237a6701fd299b43a73a00c33d19b9e6bbdb332b3c7adbbe3142b03afcd1afa1b91b528a3696d1fcc148c18d232c406f9244ff69aa19d81fd7d1acb510512a1e8dd341991d5d8a26643b32f09e6c08d93f424b4274960a9658a3001036f6bb556403e4ac6c40c8ffaf447e91be42045de141ba42a3b90ba22c1624e061ad44735df715560c87e52de98b4643c4a1e81a1011289a3d4821e386da017ae1d3215b19e7c05c5bab9e5da7744eeba9af67b6b384bb012fab52e6a90364ecf5623fa85ce42e4b7a5fe4447240f46de033701f66bd4077108a8a82af0496686ecb333ad40e94ba92093b0c9464cafe9
x =  0xe63ea52d1ce6f58a3cdb3f9634275bc86f2df21237a6701fd299b43a73a00c33d19b9e6bbdb332b3c7adbbe3142b03afcd1afa1b91b528a3696d1fcc148c18d232c406f9244ff69aa19d81fd7d1acb510512a1e8dd341991d5d8a26643b32f09e6c08d93f424b4274960a9658a3001036f6bb556403e4ac6c40c8ffaf447e919fe8dc235106d64332de864df52108dc77e4fc7df7b57257da9f7c2e0397dfe1c3891874da992b3b0ce596f7848e9c23d1eca41dbd44d81a7f949817858540aae4a588658cde4549200212dac654fd69ca4fbb451af318af334ac53c74e234cac1ab634f96a29ac4cb2ecd7c3464dcf2bbab730ec4ae62aac00c28536300c5a54
n2 = 0x7f8f2ab38b71190f40cdb523dcb636ec8f70e5d02dbaac7e629a34ad78f4ba62258b2dab69a096de4374de5bebc078a298e54bc1d5e8037cd9dcd822b204597c5ff54dd49628f2337a45c4b3def7ebdd80e956d353abdf605cdad4067dbd17df5b1b57712a2c9697d062c397a0a56c24d9cea9e6a8f0f02368295aae905ecd67737935e4d8a83778d974ea7bb6e18bfd1efb3a1d8a98f54a7836a9935ef3d96e61876a51983115c17791c2985b8c8523a94ae7b4911e6c6ffbe75261d5b7042133efa783e36c20775e15149c30a26b04a20967d3babc5c0a113c1a991105e8c0e5371b66be6e34e559a90af376ea5075caf1bd2c3cd040407db1a5dd206f2f5d
ct = 0x6db7edcf721744f0da0a1775163790d06d87b629da1306aaf92e5db812a4943b12e79ab910cbd9146b14ae97bc4c5bdbc02ceacdb32f76f48538a58001871d2f06d59c38724b7f7d4bdd8567b06fbff76b55dd2bae7761f63386cb5d880de2fe9a1f5cea338c0367da20ddf252d038ce428eb43723f3ea5b501ef8595e4209771d8e7c56dbad71b00fe5e6c9871524d7b72239455ddd852014b63acf21a5f0069716804c08c5c3d933cf46ae4c7b31742cf6e451d4f52f57ecae3caeffb3b684cc7673f73e080a01ffc683c0c8bb5561f6bd53b529b34f916297a44341b1c2f14b946563fd70ea23b06acdd26feaab12807a7c9788fdf6ab782dd82590c642aa
save = ct

c = n1-x+1
D = (c*c)-(n1*4)

tmp = 1
while tmp*tmp < D:
    tmp *= 2

sqrt = int(tmp/2)
tmp = int(tmp/4)
while True:
    if (sqrt+tmp)*(sqrt+tmp) <= D:
        sqrt += tmp
    if tmp == 1:
        break
    tmp = int(tmp/2)

print(sqrt*sqrt == D)

D = c+sqrt

tmp = 1
while tmp*2 < D:
    tmp *= 2

ans = int(tmp/2)
tmp = int(tmp/4)
while True:
    if (ans+tmp)*2 <= D:
        ans += tmp
    if tmp == 1:
        break
    tmp = int(tmp/2)

p = ans
q = c-p
print(n2%(p+2) == 0)

D = n2
tmp = 1
while tmp*(p+2) < D:
    tmp *= 2

ans = int(tmp/2)
tmp = int(tmp/4)
while True:
    if (ans+tmp)*(p+2) <= D:
        ans += tmp
    if tmp == 1:
        break
    tmp = int(tmp/2)

q2 = ans
print(q2*(p+2) == n2)

e = int.from_bytes(b'ironore48', byteorder='big')
print("e = ", e)

def mod_inverse(x,y):

	# See: http://en.wikipedia.org/wiki/Extended_Euclidean_algorithm
	def eea(a,b):
		if b==0:return (1,0)
		(q,r) = (a//b,a%b)
		(s,t) = eea(b,r)
		return (t, s-(q*t) )

	inv = eea(x,y)[0]
	if inv < 1: inv += y #we only want positive values
	return inv

phi = (p+1)*(q2-1)
print(phi%(p+1) == 0)

e = 2*2*2*3449*70497030248158207

d = mod_inverse(70497030248158207,phi)
print((d*70497030248158207)%phi == 1)
ct = pow(ct,d,n2)

d = mod_inverse(3449,phi)
print((d*3449)%phi == 1)
ct = pow(ct,d,n2)

a = 25013238591547839657615589808284561702258751789950646327663176835577595193617493691085188702201601526642212035536077458041566217857284704323399347854201444103943743860363167414253523022202071065881063037708368962458589114024468208952776141755419475541131215815170493975795360285348795838672009285638158067300
b = 573136151985234288638223388735577201129407738917835639005904166162684950516324709115004778904297817182854644609929711827824595703533929116891570196915417526791803204717720407518734240808040945998030471583565856151979924208179817682133291148954286599877238414109521483307706213926578528154673573011289616350

#a = p+2-a
b = q2-b
n = ((b-a)*mod_inverse(p+2,q2))%q2
x = ((p+2)*n+a)%((p+2)*q2)
print((x*x)%n2 == ct%n2)
ct = x

print((p+2)-(ct%(p+2)))
print("")
print(p+2)
print("")
print((q2)-(ct%(q2)))
print("")
print(q2)
print("")

a = 44064848063514603380894672516333458754162797203314125308733002544441842901065495562751407210829395209727416968135231282335798429201402022902975063312558112610366504259550878800086118884281624034263694348435139908298977904588891080736907437027053300459581418023011515545424900039131062894496353265296689690247
a = 51854000992720607699160456765117949905781721294943342446440770842538755969733875655290972592457801960248478390737342190464846706614022377258821917894307463613741244013663002706137653667521400963380571124699728791099080466184053521981906958539050042658062037705217901739188181609760738270010957254836813515191
b = 35257402284536991461594873822959422167305284533734843671322341231645486410251203196008545709604326022298057282002655914516166150114247344061279878949554603708989721948206434409321166153027812908947666401591444595802179223052603209990998618335580999192429163747797972062592091114973219558469040582512850394360

a = p+2-a
b = q2-b
n = ((b-a)*mod_inverse(p+2,q2))%q2
x = ((p+2)*n+a)%((p+2)*q2)
print((x*x)%n2 == ct%n2)
ct = x

print((p+2)-(ct%(p+2)))
print("")
print(p+2)
print("")
print((q2)-(ct%(q2)))
print("")
print(q2)
print("")

print(pow(ct,2*2*3449*70497030248158207,n2) == save)

a = 30110906128021036723805055267385969962394648403714720197500090200532826417876177412147660510418866861526369554774864243125764129333085467182019499948423610868232229968539764854931199164984786226371065070290039435778091181910811981206295259476222415892868281712017818379986371898079272141697408929808569671946
b = 31353770274183018330650641136815485025991598840919207186620859108151807493223938062029652508054679440175054341949805570611754022641241829256017089395556634561175127322005007329678392510397443609464897739289149551249891979748009027131386531216978737132484690185335771852552480237809985258586598232883689307682

a = p+2-a
b = q2-b
n = ((b-a)*mod_inverse(p+2,q2))%q2
x = ((p+2)*n+a)%((p+2)*q2)
print((x*x)%n2 == ct%n2)
print(pow(x,2*2*2*3449*70497030248158207,n2) == save)
print(pow(x,e,n2) == save)

print(hex(x))
